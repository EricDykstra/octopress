<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Process | Eric Dykstra's Blog]]></title>
  <link href="http://blog.ericdykstra.me/blog/categories/process/atom.xml" rel="self"/>
  <link href="http://blog.ericdykstra.me/"/>
  <updated>2012-09-18T11:22:05-07:00</updated>
  <id>http://blog.ericdykstra.me/</id>
  <author>
    <name><![CDATA[Eric Dykstra]]></name>
    <email><![CDATA[eric@ericdykstra.me]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Don't be a Blind Copycat: Why Good Web Design Starts with Product Goals]]></title>
    <link href="http://blog.ericdykstra.me/blog/2012/09/10/dont-be-a-blind-copycat-why-good-web-design-starts-with-product-goals/"/>
    <updated>2012-09-10T13:16:00-07:00</updated>
    <id>http://blog.ericdykstra.me/blog/2012/09/10/dont-be-a-blind-copycat-why-good-web-design-starts-with-product-goals</id>
    <content type="html"><![CDATA[<p><em>A user interface is the product of a design. A design is a set of decisions about a particular product. Those decisions represent the product's goals and ambitions.</em> - Rebekah Cox, Product Designer at Quora from <a href="http://artypapers.com/ap.log/thread.php?346">"Early Quora Design Notes"</a></p>

<p>It's no secret; the latest web design trends often find their way into a large portion of any new website that comes up. But just because "everybody's doing it" doesn't mean it's the right direction for the website you're working on, or the one your client wants. Does it make sense for <em>every</em> product to have a website that is just one page with just a logo, email form, and giant background image pre-launch? The problem with design trends is that they are copied beyond the case that they were originally made for, and the "goals and ambitions" of the website don't match the design and user interface.</p>

<p>Take the <a href="https://squareup.com">Square website</a> for example: Square is a young company with an innovative product, and just looking at their website tells you what their product does <em>in an instant</em>. I'm not going to say that Paypal ripped them off, but <a href="https://www.paypal.com/">their website</a> redesign is very similar, albeit a much more generic styling. Paypal is not Square, Paypal is a well-established brand, and having a similar homepage for Paypal doesn't make sense. Although they may be trying to sell visitors on one of their new services, it's no excuse to focus user attention on something that very few people are likely interested in. Most people are going to the Paypal website to get to their account and manage it. Even ignoring that fact, their generic call-to-action style banner is not effective. Let's compare and contrast the messaging on those two homepages.</p>

<p>The imagery on the Square homepage of someone using the product is very well-composed and shot nicely, and gives a great introduction to what the product looks like and how it's used. "Start accepting credit cards today." is the headline. The simplest way to explain what the product <em>does</em>. Then the smaller text below: "Sign up and weâ€™ll mail you a free Square Card Reader." which is a brilliantly simple call to action. It's impossible to go to the Square homepage and not understand what the product does.</p>

<p>Paypal, on the other hand, starts with an image of an iPhone, two mugs, and salt and pepper shakers, with one mug on top of a bill. Even within the context of Paypal the company, the messaging isn't initially clear. If you notice the somewhat subtle bill under one of the mugs you may think "oh, maybe it's two friends that went out for coffee, one payed the bill and the other one sent money with Paypal." I'm not sure if this is the purpose of the imagery, but I doubt most people look at the picture long enough to figure it out. Next, we get to the headline: "An ATM is more convenient when it's in your pocket." What? I use an ATM to get cash so that I can buy things at places that don't take a credit card; that has nothing to do with my phone or an app. Then the text beneath: "Send money to anyone from anywhere with the free PayPal mobile app." What does this have to do with an ATM in my pocket? Is the Paypal app supposed to replace me going to an ATM to get cash?</p>

<p>This is a great example of one company following closely a design of another in the same industry, and completely missing the mark design-wise. Design decisions should represent the product's goals and ambitions, rather than just be a function of design trends. Maybe your client came up to you and said "I want you to make our website look like [insert industry leader here]'s website". Sometimes it can work out alright, because presumably these trends exist because they work for some subset of websites, but starting with the design without thinking about the focus of the website will lead you down the same road as Paypal.</p>

<p>Starting with the product's goals and ambitions, whether it's a website about a product like Square, or a website that is a product like Quora, leads to the best user experience. Copying web design trends or, worse, mimicking another site element-for-element skips the most important part of the design process. Next week I'll take an in-depth look into the design of Quora's news feed page, which is one of my favorite examples of a page that produces relevant content (good product focus) without unnecessary clutter, and have some innovative UX that is still intuitive and doesn't break user expectation.</p>

<p>Let me know what you think in the comments or via <a href="mailto:eric@ericdykstra.me">email</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code-First Web Development - Or - The Death of the PSD]]></title>
    <link href="http://blog.ericdykstra.me/blog/2012/09/04/code-first-web-development-or-the-death-of-the-psd/"/>
    <updated>2012-09-04T07:44:00-07:00</updated>
    <id>http://blog.ericdykstra.me/blog/2012/09/04/code-first-web-development-or-the-death-of-the-psd</id>
    <content type="html"><![CDATA[<p>There is a revolution happening in the world of web design and development. Designing a website in a raster Photoshop file and handing it over to a person or team to "chop" it into HTML and CSS doesn't make sense any more in a world of countless different displays and rapid iteration web development.</p>

<p>What kind of display are you reading this post on? A 27" 2nd display, 13" laptop display, an Android smartphone, and a retina iPad display are all vastly different mediums. In 2002, when more than half of displays were 800x600 resolution, and most of the rest were 1024x768, it made sense to design a website with 800x600 in mind. Now, however, designing a website for one resolution in Photoshop just doesn't make sense. As retina displays (and other high pixel density displays) become more popular, it makes even less sense to start from raster-based PSDs.</p>

<p>The solution is to start with wireframing the UI, and then jumping straight into the code. Why create all the elements in Photoshop when many of them can be created in scalable, resizable, retina-friendly CSS? Whether you prefer pen and paper or like to use a mock-up tool such as Balsamiq, it doesn't really matter; the idea is that you get the design and feel down in wireframe, and then go straight to coding a working website. With HTML5 and CSS3 templates and frameworks such as HTML5 Boilerplate and Twitter Bootstrap, it's easier than ever to start building a responsive, grid-based website. This blog is currently powered by a blogging framework called Octopress that has these responsive features built in. Even though I haven't taken the time to customize it very much yet, it looks great on any size display, from mobile devices to large external displays. I have the framework, the next step is to turn it into what I want it to look like.</p>

<p>A common pitfall of using these frameworks is that sites end up looking like a website based on a specific framework. Another site of mine, <a href="http://fantasysos.com/">Fantasy SOS</a>, is based on Twitter Bootstrap. It's not the prettiest thing ever, and it is obvious that it's a Bootstrap site, but it took less than an hour to customize it and give it a distinct personality. A couple more hours and I can make it look like it never was a Bootstrap site to begin with. This trap can easily be avoided by wireframing your site first, and fitting the framework into your idea, rather than having the framework shape your site.</p>

<p>Another huge advantage of designing within a working website is that it makes rapid development much easier. Instead of going back to Photoshop whenever you want to change the color or size of a button, it's just a line or two of code in your CSS. If you want to run an A/B test, a few lines of code and you can have a completely different call to action. If you're designing for a client, and you comment your HTML and CSS sufficiently, they can make their own changes with a bit of coaching. Rapid development is so essential to many businesses these days, and and building a website with a code-first mentality (removing Photoshop) brings you one step closer to production with every change.</p>

<p>I realize that designers may be resistant to relinquish Photoshop, and I myself had been playing around in that program and figuring it out for years before I started doing any sort of real web development, but the days of coming up with a complete layout in Photoshop are over. For elements that can't easily be made in CSS, it's time to start using Illustrator (if you aren't already). When SVG support becomes universal, you can have scalable images baked into your code and you will want to be ready when that happens. Not every designer will be willing to learn how to turn a wireframe with notes into HTML and CSS, but the ones that do will be at a distinct advantage. Think of yourself as an executive at a company that wants a new website. Between two equally talented designers, would you prefer the one that shows you an image file and says "how's this?" and goes on to describe how elements interact, or would you prefer the one that sends you a link to a working mockup of a website with working transitions?</p>

<p>The days of mocking up a website in Photoshop from wireframe all the way to the step just before implementing it in HTML/CSS are coming to an end. How long before it happens is anyone's guess, but I believe anyone involved in web design should be learning the skills it takes to cut Photoshop out of the picture. When the scale tips, bosses and customers aren't going to be satisfied just seeing a mockup as a jpg file.</p>

<p>Agree? Disagree? Let me know in the comments or send me an <a href="mailto:eric@ericdykstra.me">email</a> with your thoughts and I'll get back to you.</p>
]]></content>
  </entry>
  
</feed>
